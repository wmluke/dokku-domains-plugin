#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

# Check if name is specified
if [[ $1 == domains ]] || [[ $1 == domains:* ]]; then
  if [[ -z $2 ]]; then
    echo "You must specify an app name"
    exit 1
  else
    APP="$2"
    DOMAINS_FILE="$DOKKU_ROOT/$APP/DOMAINS"
    SSL_DOMAINS_FILE="$DOKKU_ROOT/$APP/DOMAINS_SSL"

    # Check if app exists with the same name
    if [ ! -d "$DOKKU_ROOT/$APP" ]; then
      echo "App $APP does not exist"
      exit 1
    fi

    [ -f $DOMAINS_FILE ] || {
      echo "-----> Creating $DOMAINS_FILE"
      touch $DOMAINS_FILE
    }
  fi
fi

case "$1" in

  domains)
      cat $DOMAINS_FILE
      cat $SSL_DOMAINS_FILE
    ;;

  domains:setssl)
    if [[ -z "$3" ]]; then
      echo "Usage: dokku domains:setssl APP CERT_NAME DOMAIN1 [DOMAIN2 ...]"
      echo "Must specify a CERT_NAME."
      exit 1
    fi
    if [[ -z "${*:4}" ]]; then
      echo "Usage: dokku domains:setssl APP CERT_NAME DOMAIN1 [DOMAIN2 ...]"
      echo "Must specify DOMAIN."
      exit 1
    fi
    cert_name="$3"
    domains="${*:4}"
    PORT=$(< "$DOKKU_ROOT/$APP/PORT")

    SSL="$DOKKU_ROOT/$APP/ssl/$cert_name"

    [ -f "$SSL.crt" ] || {
      echo "$SSL.crt does not exist"
      exit 1
    }

    [ -f $SSL.key ] || {
      echo "$SSL.key does not exist"
      exit 1
    }

    echo "$cert_name, $domains" > $SSL_DOMAINS_FILE

  cat<<EOF > $DOKKU_ROOT/$APP/nginx-domains-ssl-$cert_name.conf
upstream $APP-domains-ssl-$cert_name { server 127.0.0.1:$PORT; }
server {
  listen      [::]:80;
  listen      80;
  server_name $domains;
  location    / {
    proxy_pass  http://$APP-domains;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
server {
  listen      [::]:443;
  listen      443;
  server_name $domains;

  ssl on;
  ssl_certificate     $SSL.crt;
  ssl_certificate_key $SSL.key;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!CAMELLIA;
  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_prefer_server_ciphers on;

  location    / {
    proxy_pass  http://$APP;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF

      pluginhook nginx-pre-reload $APP
      sudo /etc/init.d/nginx reload
    ;;

  domains:set)
    if [[ -z "${*:3}" ]]; then
      echo "Usage: dokku domains:set APP DOMAIN1 [DOMAIN2 ...]"
      echo "Must specify a DOMAIN."
      exit 1
    fi

    domains="${*:3}"
    PORT=$(< "$DOKKU_ROOT/$APP/PORT")

    echo "$domains" > $DOMAINS_FILE

    # default nginx.conf
  cat<<EOF > $DOKKU_ROOT/$APP/nginx-domains.conf
upstream $APP-domains { server 127.0.0.1:$PORT; }
server {
  listen      [::]:80;
  listen      80;
  server_name $domains;
  location    / {
    proxy_pass  http://$APP-domains;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF

      pluginhook nginx-pre-reload $APP
      sudo /etc/init.d/nginx reload
    ;;

  help)
    cat && cat<<EOF
    domains <app>                                   display the domains for an app
    domains:set <app> DOMAIN1 [DOMAIN2 ...]         set one or more domains
EOF
    ;;
esac
